{
  "tags": [
    {
      "name": "Brasil API",
      "description": "Transformando o Brasil em uma API",
      "externalDocs": {
        "description": "Saiba mais",
        "url": "https://brasilapi.com.br/"
      }
    },
    {
      "name": "BANKS",
      "description": "Informações sobre sistema bancário"
    },
    {
      "name": "CEP",
      "description": "Informações referentes a CEPs"
    },
    {
      "name": "CEP V2",
      "description": "Informações referentes a CEPs - Versão 2"
    },
    {
      "name": "CNPJ",
      "description": "Busca dados de empresas por CNPJ"
    },
    {
      "name": "DDD",
      "description": "Informações relacionadas a DDDs"
    },
    {
      "name": "Feriados Nacionais",
      "description": "Informações sobre feriados nacionais"
    },
    {
      "name": "FIPE",
      "description": "Informações sobre Preço Médio de Veículos fornecido pela FIPE (Fundação Instituto de Pesquisas Econômicas)"
    },
    {
      "name": "IBGE",
      "description": "Informações sobre estados Provenientes do IBGE"
    },
    {
      "name": "ISBN",
      "description": "Informações sobre livros publicados no <strong>Brasil</strong> (prefixo <code>65</code> ou <code>85</code>) a partir do <abbr title=\"International Standard Book Number\">ISBN</abbr>, um sistema internacional de identificação de livros que utiliza números para classificá-los por título, autor, país, editora e edição."
    },
    {
      "name": "NCM",
      "description": "Informações referentes a NCMs"
    },
    {
      "name": "REGISTRO BR",
      "description": "Avalia um dominio no registro.br"
    },
    {
      "name": "TAXAS",
      "description": "Taxas de juros e índices oficiais"
    }
  ],
  "paths": {
    "/banks/v1": {
      "get": {
        "tags": [
          "BANKS"
        ],
        "summary": "Retorna informações de todos os bancos do Brasil",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bank"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/banks/v1/{code}": {
      "get": {
        "tags": [
          "BANKS"
        ],
        "summary": "Busca as informações de um banco a partir de um código",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bank"
                }
              }
            }
          },
          "404": {
            "description": "O código do banco não foi encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": {
                  "message": "Código bancário não encontrado",
                  "type": "BANK_CODE_NOT_FOUND"
                }
              }
            }
          }
        }
      }
    },
    "/cep/v1/{cep}": {
      "get": {
        "tags": [
          "CEP"
        ],
        "summary": "Busca por CEP com múltiplos providers de fallback.",
        "description": "",
        "parameters": [
          {
            "name": "cep",
            "description": "O CEP (Código de Endereçamento Postal) é um sistema de códigos que visa racionalizar o processo de encaminhamento e entrega de correspondências através da divisão do país em regiões postais. ... Atualmente, o CEP é composto por oito dígitos, cinco de um lado e três de outro. Cada algarismo do CEP possui um significado.\n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Address"
                }
              }
            }
          },
          "404": {
            "description": "Todos os serviços de CEP retornaram erro.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CepError"
                }
              }
            }
          }
        }
      }
    },
    "/cep/v2/{cep}": {
      "get": {
        "tags": [
          "CEP V2"
        ],
        "summary": "Versão 2 do serviço de busca por CEP com múltiplos providers de fallback.",
        "description": "",
        "parameters": [
          {
            "name": "cep",
            "description": "O CEP (Código de Endereçamento Postal) é um sistema de códigos que visa racionalizar o processo de encaminhamento e entrega de correspondências através da divisão do país em regiões postais. ... Atualmente, o CEP é composto por oito dígitos, cinco de um lado e três de outro. Cada algarismo do CEP possui um significado.\n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressV2"
                }
              }
            }
          },
          "404": {
            "description": "Todos os serviços de CEP retornaram erro.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CepError"
                }
              }
            }
          }
        }
      }
    },
    "/cnpj/v1/{cnpj}": {
      "get": {
        "tags": [
          "CNPJ"
        ],
        "summary": "Busca por CNPJ na API Minha Receita.",
        "description": "",
        "parameters": [
          {
            "name": "cnpj",
            "description": "O Cadastro Nacional da Pessoa Jurídica é um número único que identifica uma pessoa jurídica e outros tipos de arranjo jurídico sem personalidade jurídica junto à Receita Federal.\n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CNPJ"
                }
              }
            }
          },
          "404": {
            "description": "CNPJ não encontrado na API Minha Receita.",
            "content": {
              "application/json": {
                "example": {
                  "name": "CnpjPromiseError",
                  "message": "Erro retornado pela API Minha Receita.",
                  "type": "service_error",
                  "errors": [
                    {
                      "message": "CNPJ 00.000.000/0001-91 não encontrado."
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ddd/v1/{ddd}": {
      "get": {
        "tags": [
          "DDD"
        ],
        "summary": "Retorna estado e lista de cidades por DDD",
        "description": "",
        "parameters": [
          {
            "name": "ddd",
            "description": "DDD significa Discagem Direta à Distância. É um sistema de ligação telefônica automática entre diferentes áreas urbanas nacionais. O DDD é um código constituído por 2 dígitos que identificam as principais cidades do país e devem ser adicionados ao nº de telefone, juntamente com o código da operadora.\n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DDDInfo"
                }
              }
            }
          },
          "404": {
            "description": "DDD não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": {
                  "name": "ddd_error",
                  "message": "DDD não encontrado",
                  "type": "DDD_NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Todos os serviços de DDD retornaram erro.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": {
                  "name": "ddd_error",
                  "message": "Todos os serviços de DDD retornaram erro.",
                  "type": "service_error"
                }
              }
            }
          }
        }
      }
    },
    "/fipe/marcas/v1/{tipoVeiculo}": {
      "get": {
        "tags": [
          "FIPE"
        ],
        "summary": "Lista as marcas de veículos referente ao tipo de veículo",
        "description": "",
        "parameters": [
          {
            "name": "tipoVeiculo",
            "description": "Os tipos suportados são `caminhoes`, `carros` e `motos`. Quando o tipo não é específicado são buscada as marcas de todos os tipos de veículos\n",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "tabela_referencia",
            "description": "Código da tabela fipe de referência. Por padrão é utilizado o código da tabela fipe atual.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MarcaFIPE"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Tabela de referência inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": {
                  "message": "Tabela de referência inválida",
                  "type": "bad_request",
                  "name": "BadRequestError"
                }
              }
            }
          }
        }
      }
    },
    "/fipe/preco/v1/{codigoFipe}": {
      "get": {
        "tags": [
          "FIPE"
        ],
        "summary": "Consulta o preço do veículo segundo a tabela fipe.",
        "description": "",
        "parameters": [
          {
            "name": "codigoFipe",
            "description": "Código fipe do veículo.\n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "tabela_referencia",
            "description": "Código da tabela fipe de referência. Por padrão é utilizado o código da tabela fipe atual.\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VeiculoFIPE"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "examples": {
                  "Código Fipe Inválido": {
                    "value": {
                      "message": "Código fipe inválido",
                      "type": "bad_request",
                      "name": "BadRequestError"
                    }
                  },
                  "Tabela FIPE Inválida": {
                    "value": {
                      "message": "Tabela FIPE Inválida",
                      "type": "bad_request",
                      "name": "BadRequestError"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fipe/tabelas/v1": {
      "get": {
        "tags": [
          "FIPE"
        ],
        "summary": "Lista as tabelas de referência existentes.",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TabelaFIPE"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/feriados/v1/{ano}": {
      "get": {
        "tags": [
          "Feriados Nacionais"
        ],
        "summary": "Lista os feriados nacionais de determinado ano.",
        "description": "Calcula os feriados móveis baseados na Páscoa e adiciona os feriados fixos",
        "parameters": [
          {
            "name": "ano",
            "description": "Ano para calcular os feriados.\n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Holiday"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Ano fora do intervalo suportado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": {
                  "type": "feriados_range_error",
                  "message": "Ano fora do intervalo suportado entre 1900 e 2199."
                }
              }
            }
          },
          "500": {
            "description": "Erro inesperado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": {
                  "type": "feriados_error",
                  "message": "Erro ao calcular feriados."
                }
              }
            }
          }
        }
      }
    },
    "/ibge/municipios/v1/{siglaUF}?providers=dados-abertos-br,gov,wikipedia": {
      "get": {
        "tags": [
          "IBGE"
        ],
        "summary": "Retorna os municípios da unidade federativa",
        "description": "",
        "parameters": [
          {
            "name": "siglaUF",
            "description": "Sigla da unidade federativa, por exemplo SP, RJ, SC, etc.\n",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          {
            "name": "providers",
            "description": "Lista de provedores separados por vírgula.<br><strong>Provedores disponíveis:</strong> <ul><li>dados-abertos-br</li><li>gov</li><li>wikipedia</li></ul>",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successo",
            "content": {
              "application/json": {
                "example": [
                  {
                    "nome": "Tubarão",
                    "codigo_ibge": "421870705"
                  },
                  {
                    "nome": "Tunápolis",
                    "codigo_ibge": "421875605"
                  },
                  {
                    "nome": "Turvo",
                    "codigo_ibge": "421880605"
                  },
                  {
                    "nome": "Morro Chato",
                    "codigo_ibge": "421880620"
                  },
                  {
                    "nome": "União do Oeste",
                    "codigo_ibge": "421885505"
                  },
                  {
                    "nome": "Urubici",
                    "codigo_ibge": "421890505"
                  },
                  {
                    "nome": "Águas Brancas",
                    "codigo_ibge": "421890510"
                  },
                  {
                    "nome": "Santa Teresinha",
                    "codigo_ibge": "421890520"
                  },
                  {
                    "nome": "Urupema",
                    "codigo_ibge": "421895405"
                  },
                  {
                    "nome": "Urussanga",
                    "codigo_ibge": "421900205"
                  },
                  {
                    "nome": "Vargeão",
                    "codigo_ibge": "421910105"
                  },
                  {
                    "nome": "Vargem",
                    "codigo_ibge": "421915005"
                  },
                  {
                    "nome": "Vargem Bonita",
                    "codigo_ibge": "421917605"
                  },
                  {
                    "nome": "Vidal Ramos",
                    "codigo_ibge": "421920005"
                  },
                  {
                    "nome": "Videira",
                    "codigo_ibge": "421930905"
                  },
                  {
                    "nome": "Anta Gorda",
                    "codigo_ibge": "421930910"
                  },
                  {
                    "nome": "Lourdes",
                    "codigo_ibge": "421930925"
                  },
                  {
                    "nome": "Vitor Meireles",
                    "codigo_ibge": "421935805"
                  },
                  {
                    "nome": "Barra da Prata",
                    "codigo_ibge": "421935810"
                  },
                  {
                    "nome": "Witmarsum",
                    "codigo_ibge": "421940805"
                  },
                  {
                    "nome": "Xanxerê",
                    "codigo_ibge": "421950705"
                  },
                  {
                    "nome": "Cambuinzal",
                    "codigo_ibge": "421950715"
                  },
                  {
                    "nome": "Xavantina",
                    "codigo_ibge": "421960605"
                  },
                  {
                    "nome": "Linha das Palmeiras",
                    "codigo_ibge": "421960610"
                  },
                  {
                    "nome": "Xaxim",
                    "codigo_ibge": "421970505"
                  },
                  {
                    "nome": "Anita Garibaldi",
                    "codigo_ibge": "421970511"
                  },
                  {
                    "nome": "Diadema",
                    "codigo_ibge": "421970516"
                  },
                  {
                    "nome": "Zortéa",
                    "codigo_ibge": "421985305"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Sigla inexistente ou inválida",
            "content": {
              "application/json": {
                "example": {
                  "name": "NotFoundError",
                  "message": "UF não encontrada",
                  "type": "not_found"
                }
              }
            }
          }
        }
      }
    },
    "/ibge/uf/v1": {
      "get": {
        "tags": [
          "IBGE"
        ],
        "summary": "Retorna informações de todos estados do Brasil",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/State"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ibge/uf/v1/{code}": {
      "get": {
        "tags": [
          "IBGE"
        ],
        "summary": "Busca as informações de um estado a partir da sigla ou código",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/State"
                }
              }
            }
          },
          "404": {
            "description": "O código / sigla do estado não foi encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": {
                  "name": "NotFoundError",
                  "message": "UF não encontrada.",
                  "type": "not_found"
                }
              }
            }
          }
        }
      }
    },
    "/isbn/v1/{isbn}": {
      "get": {
        "tags": [
          "ISBN"
        ],
        "summary": "Informações sobre o livro a partir do ISBN",
        "description": "",
        "parameters": [
          {
            "name": "isbn",
            "description": "O código informado pode conter traços (<code>-</code>) e ambos os formatos são aceitos, sendo eles o obsoleto de 10 dígitos e o atual de 13 dígitos.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "9788545702870"
            }
          },
          {
            "name": "providers",
            "description": "Lista de provedores separados por vírgula. Se não especificado, será realizado uma busca em todos os provedores e o que retornar as informações mais rapidamente será o escolhido.",
            "in": "query",
            "required": false,
            "style": "pipeDelimited",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "cbl",
                  "mercado-editorial",
                  "open-library",
                  "google-books"
                ]
              },
              "format": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISBNInfo"
                }
              }
            }
          },
          "400": {
            "description": "ISBN inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": {
                  "name": "BadRequestError",
                  "message": "ISBN inválido",
                  "type": "bad_request"
                }
              }
            }
          },
          "404": {
            "description": "ISBN não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": {
                  "name": "NotFoundError",
                  "message": "ISBN não encontrado",
                  "type": "not_found"
                }
              }
            }
          },
          "500": {
            "description": "Todos os serviços de ISBN retornaram erro",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": {
                  "name": "InternalError",
                  "message": "Todos os serviços de ISBN retornaram erro.",
                  "type": "internal"
                }
              }
            }
          }
        }
      }
    },
    "/ncm/v1": {
      "get": {
        "tags": [
          "NCM"
        ],
        "summary": "Retorna informações de todos os NCMs",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NCM"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ncm/v1?search={code}": {
      "get": {
        "tags": [
          "NCM"
        ],
        "summary": "Pesquisa por NCMs a partir  de um código ou descrição.",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NCM"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ncm/v1/{code}": {
      "get": {
        "tags": [
          "NCM"
        ],
        "summary": "Busca as informações de um NCM a partir de um código",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NCM"
                }
              }
            }
          },
          "404": {
            "description": "O código do NCM não foi encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": {
                  "message": "Código NCM não encontrado",
                  "type": "NCM_CODE_NOT_FOUND"
                }
              }
            }
          }
        }
      }
    },
    "/registrobr/v1/{domain}": {
      "get": {
        "tags": [
          "REGISTRO BR"
        ],
        "summary": "Avalia o status de um dominio .br",
        "description": "",
        "parameters": [
          {
            "name": "domain",
            "description": "O domínio ou nome a ser avaliado",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/REGISTROBR"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/REGISTROBR_BAD_REQUEST"
                }
              }
            }
          }
        }
      }
    },
    "/taxas/v1": {
      "get": {
        "tags": [
          "TAXAS"
        ],
        "summary": "Retorna as taxas de juros e alguns índices oficiais do Brasil",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Taxa"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/taxas/v1/{sigla}": {
      "get": {
        "tags": [
          "TAXAS"
        ],
        "summary": "Busca as informações de uma taxa a partir do seu nome/sigla",
        "description": "",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Taxa"
                }
              }
            }
          },
          "404": {
            "description": "Taxa ou Índice não foi encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                },
                "example": {
                  "name": "NotFoundError",
                  "message": "Taxa ou Índice não encontrada.",
                  "type": "not_found"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Bank": {
        "title": "Bank",
        "required": [
          "ispb",
          "name",
          "code",
          "fullName"
        ],
        "type": "object",
        "properties": {
          "ispb": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "fullName": {
            "type": "string"
          }
        },
        "example": {
          "ispb": "00000000",
          "name": "BCO DO BRASIL S.A.",
          "code": 1,
          "fullName": "Banco do Brasil S.A."
        }
      },
      "Coordinates": {
        "title": "Coordinates",
        "required": [
          "longitude",
          "latitude"
        ],
        "type": "object",
        "properties": {
          "longitude": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          }
        },
        "example": {
          "longitude": "-49.0629788",
          "latitude": "-26.9244749"
        }
      },
      "Location": {
        "title": "Location",
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "coordinates": {
            "schema": {
              "$ref": "#/components/schemas/Coordinates"
            }
          }
        },
        "example": {
          "type": "Point",
          "coordinates": {
            "longitude": "-49.0629788",
            "latitude": "-26.9244749"
          }
        }
      },
      "AddressV2": {
        "title": "Address",
        "required": [
          "cep",
          "state",
          "city",
          "neighborhood",
          "street",
          "service",
          "location"
        ],
        "type": "object",
        "properties": {
          "cep": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "neighborhood": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "location": {
            "schema": {
              "$ref": "#/components/schemas/Location"
            }
          }
        },
        "example": {
          "cep": "89010025",
          "state": "SC",
          "city": "Blumenau",
          "neighborhood": "Centro",
          "street": "Rua Doutor Luiz de Freitas Melro",
          "service": "viacep",
          "location": {
            "type": "Point",
            "coordinates": {
              "longitude": "-49.0629788",
              "latitude": "-26.9244749"
            }
          }
        }
      },
      "Address": {
        "title": "Address",
        "required": [
          "cep",
          "state",
          "city",
          "neighborhood",
          "street",
          "service"
        ],
        "type": "object",
        "properties": {
          "cep": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "neighborhood": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "service": {
            "type": "string"
          }
        },
        "example": {
          "cep": "89010025",
          "state": "SC",
          "city": "Blumenau",
          "neighborhood": "Centro",
          "street": "Rua Doutor Luiz de Freitas Melro",
          "service": "viacep"
        }
      },
      "CepError": {
        "title": "CepError.",
        "required": [
          "name",
          "message",
          "type",
          "errors"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "description": ""
          }
        },
        "example": {
          "name": "CepPromiseError",
          "message": "Todos os serviços de CEP retornaram erro.",
          "type": "service_error",
          "errors": [
            {
              "name": "ServiceError",
              "message": "CEP INVÁLIDO",
              "service": "correios"
            },
            {
              "name": "ServiceError",
              "message": "CEP não encontrado na base do ViaCEP.",
              "service": "viacep"
            }
          ]
        }
      },
      "Error": {
        "title": "Error",
        "required": [
          "name",
          "message",
          "service"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "service": {
            "type": "string"
          }
        },
        "example": {
          "name": "ServiceError",
          "message": "CEP INVÁLIDO",
          "service": "correios"
        }
      },
      "CNPJ": {
        "title": "CNPJ info",
        "type": "object",
        "properties": {
          "cnpj": {
            "type": "string"
          },
          "identificador_matriz_filial": {
            "type": "integer",
            "format": "int32"
          },
          "descricao_matriz_filial": {
            "type": "string"
          },
          "razao_social": {
            "type": "string"
          },
          "nome_fantasia": {
            "type": "string"
          },
          "situacao_cadastral": {
            "type": "integer",
            "format": "int32"
          },
          "descricao_situacao_cadastral": {
            "type": "string"
          },
          "data_situacao_cadastral": {
            "type": "string",
            "format": "date"
          },
          "motivo_situacao_cadastral": {
            "type": "integer",
            "format": "int32"
          },
          "nome_cidade_exterior": {
            "type": "string",
            "format": "nullable"
          },
          "codigo_natureza_juridica": {
            "type": "integer",
            "format": "int32"
          },
          "data_inicio_atividade": {
            "type": "string",
            "format": "date"
          },
          "cnae_fiscal": {
            "type": "integer",
            "format": "int32"
          },
          "cnae_fiscal_descricao": {
            "type": "string"
          },
          "descricao_tipo_logradouro": {
            "type": "string"
          },
          "logradouro": {
            "type": "string"
          },
          "numero": {
            "type": "string"
          },
          "complemento": {
            "type": "string"
          },
          "bairro": {
            "type": "string"
          },
          "cep": {
            "type": "integer",
            "format": "int32"
          },
          "uf": {
            "type": "string"
          },
          "codigo_municipio": {
            "type": "integer",
            "format": "int32"
          },
          "municipio": {
            "type": "string"
          },
          "ddd_telefone_1": {
            "type": "string"
          },
          "ddd_telefone_2": {
            "type": "string",
            "format": "nullable"
          },
          "ddd_fax": {
            "type": "string",
            "format": "nullable"
          },
          "qualificacao_do_responsavel": {
            "type": "integer",
            "format": "int32"
          },
          "capital_social": {
            "type": "integer",
            "format": "int32"
          },
          "porte": {
            "type": "integer",
            "format": "int32"
          },
          "descricao_porte": {
            "type": "string"
          },
          "opcao_pelo_simples": {
            "type": "boolean"
          },
          "data_opcao_pelo_simples": {
            "type": "string",
            "format": "nullable"
          },
          "data_exclusao_do_simples": {
            "type": "string",
            "format": "nullable"
          },
          "opcao_pelo_mei": {
            "type": "boolean"
          },
          "situacao_especial": {
            "type": "string",
            "format": "nullable"
          },
          "data_situacao_especial": {
            "type": "string",
            "format": "nullable"
          },
          "cnaes_secundarios": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "codigo": {
                  "type": "integer",
                  "format": "int32"
                },
                "descricao": {
                  "type": "string"
                }
              }
            }
          },
          "qsa": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "identificador_de_socio": {
                  "type": "integer",
                  "format": "int32"
                },
                "nome_socio": {
                  "type": "string"
                },
                "cnpj_cpf_do_socio": {
                  "type": "string"
                },
                "codigo_qualificacao_socio": {
                  "type": "integer",
                  "format": "int32"
                },
                "percentual_capital_social": {
                  "type": "integer",
                  "format": "int32"
                },
                "data_entrada_sociedade": {
                  "type": "string",
                  "format": "date"
                },
                "cpf_representante_legal": {
                  "type": "string",
                  "format": "nullable"
                },
                "nome_representante_legal": {
                  "type": "string",
                  "format": "nullable"
                },
                "codigo_qualificacao_representante_legal": {
                  "type": "string",
                  "format": "nullable"
                }
              }
            }
          }
        },
        "example": {
          "cnpj": "19131243000197",
          "identificador_matriz_filial": 1,
          "descricao_matriz_filial": "Matriz",
          "razao_social": "OPEN KNOWLEDGE BRASIL",
          "nome_fantasia": "REDE PELO CONHECIMENTO LIVRE",
          "situacao_cadastral": 2,
          "descricao_situacao_cadastral": "Ativa",
          "data_situacao_cadastral": "2013-10-03",
          "motivo_situacao_cadastral": 0,
          "nome_cidade_exterior": null,
          "codigo_natureza_juridica": 3999,
          "data_inicio_atividade": "2013-10-03",
          "cnae_fiscal": 9430800,
          "cnae_fiscal_descricao": "Atividades de associações de defesa de direitos sociais",
          "descricao_tipo_logradouro": "ALAMEDA",
          "logradouro": "FRANCA",
          "numero": "144",
          "complemento": "APT   34",
          "bairro": "JARDIM PAULISTA",
          "cep": 1422000,
          "uf": "SP",
          "codigo_municipio": 7107,
          "municipio": "SAO PAULO",
          "ddd_telefone_1": "11  23851939",
          "ddd_telefone_2": null,
          "ddd_fax": null,
          "qualificacao_do_responsavel": 10,
          "capital_social": 0,
          "porte": 5,
          "descricao_porte": "Demais",
          "opcao_pelo_simples": false,
          "data_opcao_pelo_simples": null,
          "data_exclusao_do_simples": null,
          "opcao_pelo_mei": false,
          "situacao_especial": null,
          "data_situacao_especial": null,
          "cnaes_secundarios": [
            {
              "codigo": 9493600,
              "descricao": "Atividades de organizações associativas ligadas à cultura e à arte"
            },
            {
              "codigo": 9499500,
              "descricao": "Atividades associativas não especificadas anteriormente"
            },
            {
              "codigo": 8599699,
              "descricao": "Outras atividades de ensino não especificadas anteriormente"
            },
            {
              "codigo": 8230001,
              "descricao": "Serviços de organização de feiras, congressos, exposições e festas"
            },
            {
              "codigo": 6204000,
              "descricao": "Consultoria em tecnologia da informação"
            }
          ],
          "qsa": [
            {
              "identificador_de_socio": 2,
              "nome_socio": "NATALIA PASSOS MAZOTTE CORTEZ",
              "cnpj_cpf_do_socio": "***059967**",
              "codigo_qualificacao_socio": 10,
              "percentual_capital_social": 0,
              "data_entrada_sociedade": "2019-02-14",
              "cpf_representante_legal": null,
              "nome_representante_legal": null,
              "codigo_qualificacao_representante_legal": null
            }
          ]
        }
      },
      "DDDInfo": {
        "title": "DDD Info",
        "required": [
          "state",
          "cities"
        ],
        "type": "object",
        "properties": {
          "state": {
            "type": "string"
          },
          "cities": {
            "type": "array",
            "items": "string"
          },
          "nome": {
            "type": "string"
          },
          "regiao": {
            "type": "object",
            "$ref": "#/components/schemas/Region"
          }
        },
        "example": {
          "state": "SP",
          "cities": [
            "EMBU",
            "VÁRZEA PAULISTA",
            "VARGEM GRANDE PAULISTA",
            "VARGEM",
            "TUIUTI",
            "TABOÃO DA SERRA",
            "SUZANO",
            "SÃO ROQUE",
            "SÃO PAULO"
          ]
        }
      },
      "ErrorMessage": {
        "title": "ErrorMessage",
        "required": [
          "message",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "example": {
          "message": "Cidade não localizada",
          "type": "city_error",
          "name": "CITY_NOT_FOUND"
        }
      },
      "TabelaFIPE": {
        "title": "Tabelas de referência FIPE",
        "required": [
          "codigo",
          "mes"
        ],
        "type": "object",
        "properties": {
          "codigo": {
            "type": "integer"
          },
          "mes": {
            "type": "string"
          }
        },
        "example": {
          "codigo": 271,
          "mes": "junho/2021 "
        }
      },
      "MarcaFIPE": {
        "title": "Marcas FIPE",
        "required": [
          "nome",
          "valor"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "valor": {
            "type": "integer"
          }
        },
        "example": {
          "nome": "AGRALE",
          "valor": "102"
        }
      },
      "VeiculoFIPE": {
        "title": "Veículo FIPE",
        "required": [
          "valor",
          "marca",
          "modelo",
          "anoModelo",
          "combustivel",
          "codigoFipe",
          "mesReferencia",
          "tipoVeiculo",
          "siglaCombustivel",
          "dataConsulta"
        ],
        "type": "object",
        "properties": {
          "valor": {
            "type": "string"
          },
          "marca": {
            "type": "string"
          },
          "modelo": {
            "type": "string"
          },
          "anoModelo": {
            "type": "integer"
          },
          "combustivel": {
            "type": "string"
          },
          "codigoFipe": {
            "type": "string"
          },
          "mesReferencia": {
            "type": "string"
          },
          "tipoVeiculo": {
            "type": "integer"
          },
          "siglaCombustivel": {
            "type": "string"
          },
          "dataConsulta": {
            "type": "string"
          }
        },
        "example": {
          "valor": "R$ 6.022,00",
          "marca": "Fiat",
          "modelo": "Palio EX 1.0 mpi 2p",
          "anoModelo": 1998,
          "combustivel": "Álcool",
          "codigoFipe": "001004-9",
          "mesReferencia": "junho de 2021 ",
          "tipoVeiculo": 1,
          "siglaCombustivel": "Á",
          "dataConsulta": "segunda-feira, 7 de junho de 2021 23:05"
        }
      },
      "Holiday": {
        "title": "Holiday",
        "type": "object",
        "required": [
          "date",
          "type",
          "name"
        ],
        "properties": {
          "date": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "format": "int32"
          },
          "fullName": {
            "type": "string"
          }
        },
        "example": {
          "date": "2021-01-01",
          "name": "Confraternização mundial",
          "type": "national"
        }
      },
      "State": {
        "title": "State",
        "required": [
          "id",
          "sigla",
          "nome",
          "regiao"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sigla": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          },
          "regiao": {
            "type": "object",
            "$ref": "#/components/schemas/Region"
          }
        },
        "example": {
          "id": 35,
          "sigla": "SP",
          "nome": "São Paulo",
          "regiao": {
            "id": 3,
            "sigla": "SE",
            "nome": "Sudeste"
          }
        }
      },
      "Region": {
        "title": "Region",
        "required": [
          "id",
          "sigla",
          "nome"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "sigla": {
            "type": "string"
          },
          "nome": {
            "type": "string"
          }
        },
        "example": {
          "id": 3,
          "sigla": "SE",
          "nome": "Sudeste"
        }
      },
      "Dimensions": {
        "title": "Dimensions",
        "required": [
          "width",
          "height",
          "unit"
        ],
        "type": "object",
        "properties": {
          "width": {
            "type": "float"
          },
          "height": {
            "type": "float"
          },
          "unit": {
            "type": "string",
            "enum": [
              "CENTIMETER",
              "INCH"
            ]
          }
        },
        "example": {
          "width": 17.5,
          "height": 25.7,
          "unit": "CENTIMETER"
        }
      },
      "Price": {
        "title": "Price",
        "required": [
          "currency",
          "amount"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Código ISO 4217"
          },
          "amount": {
            "type": "float"
          }
        },
        "example": {
          "currency": "BRL",
          "amount": 104
        }
      },
      "ISBNInfo": {
        "title": "ISBN Info",
        "required": [
          "isbn",
          "title",
          "provider"
        ],
        "type": "object",
        "properties": {
          "isbn": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "authors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "publisher": {
            "type": "string"
          },
          "synopsis": {
            "type": "string"
          },
          "dimensions": {
            "type": "object",
            "$ref": "#/components/schemas/Dimensions"
          },
          "year": {
            "type": "integer"
          },
          "format": {
            "type": "string",
            "enum": [
              "PHYSICAL",
              "DIGITAL"
            ]
          },
          "page_count": {
            "type": "integer"
          },
          "subjects": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "location": {
            "type": "string"
          },
          "retail_price": {
            "type": "object",
            "$ref": "#/components/schemas/Price"
          },
          "cover_url": {
            "type": "string",
            "format": "uri"
          },
          "provider": {
            "type": "string",
            "enum": [
              "cbl",
              "mercado-editorial",
              "open-library",
              "google-books"
            ]
          }
        },
        "example": {
          "isbn": "9788545702870",
          "title": "Akira",
          "subtitle": null,
          "authors": [
            "KATSUHIRO OTOMO",
            "DRIK SADA",
            "CASSIUS MEDAUAR",
            "MARCELO DEL GRECO",
            "DENIS TAKATA"
          ],
          "publisher": "Japorama Editora e Comunicação",
          "synopsis": "Um dos marcos da ficção científica oriental que revolucionou a chegada dos mangás e da cultura pop japonesa no Ocidente retorna em uma nova edição especial. Após atropelar uma criança de aparência estranha, Tetsuo Shima (o melhor amigo de Kaneda), começa a sentir algumas reações anormais. Isso acaba chamando a atenção do governo que está projetando diversas experiências secretas e acabam sequestrando Tetsuo. Nesta aventura cheia de ficção, Kaneda entra em cena para salvar o amigo, enquanto uma terrível e monstruosa entidade ameaça despertar.",
          "dimensions": {
            "width": 17.5,
            "height": 25.7,
            "unit": "CENTIMETER"
          },
          "year": 2017,
          "format": "PHYSICAL",
          "page_count": 364,
          "subjects": [
            "Cartoons; caricaturas e quadrinhos",
            "mangá",
            "motocicleta",
            "gangue",
            "Delinquência"
          ],
          "location": "SÃO PAULO, SP",
          "retail_price": null,
          "cover_url": null,
          "provider": "cbl"
        }
      },
      "NCM": {
        "title": "NCM",
        "required": [
          "codigo",
          "descricao",
          "data_inicio",
          "data_fim",
          "tipo_ato",
          "numero_ato",
          "ano"
        ],
        "type": "object",
        "properties": {
          "codigo": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          },
          "data_inicio": {
            "type": "string"
          },
          "data_fim": {
            "type": "string"
          },
          "tipo_ato": {
            "type": "string"
          },
          "numero_ato": {
            "type": "string"
          },
          "ano": {
            "type": "string"
          }
        },
        "example": {
          "codigo": "3305.10.00",
          "descricao": "- Xampus",
          "data_inicio": "2022-04-01",
          "data_fim": "9999-12-31",
          "tipo_ato": "Res Camex",
          "numero_ato": "000272",
          "ano_ato": "2021"
        }
      },
      "REGISTROBR": {
        "title": "Avaliação de domínio .br",
        "type": "object",
        "required": [
          "status_code",
          "status",
          "fqdn"
        ],
        "properties": {
          "status_code": {
            "type": "integer",
            "description": "0 - domínio disponível | 1 - disponível com tickets concorrentes | 2 - já registrado | 3 - indisponível | 4 - inválido | 5 - aguardando processo de liberação | 6 - disponível no processo de liberação em andamento | 7 - disponível no processo de liberação em andamento com tickets concorrentes | 8 - erro | 9 - domínio em processo de liberação competitivo | 10 - desconhecido"
          },
          "status": {
            "type": "string",
            "description": "AVAILABLE | AVAILABLE_WITH_TICKET | REGISTERED | UNAVAILABLE | INVALID_QUERY | RELEASE_WAITING | RELEASE_IN_PROGRESS | RELEASE_IN_PROGRESS_WITH_TICKETS | ERROR | DOMAIN_PROCESS_RELEASE | UNKNOW"
          },
          "fqdn": {
            "type": "string",
            "description": "Domínio pesquisado"
          },
          "suggestions": {
            "type": "array",
            "description": "Caso o dominio esteja indisponivel o registro podera sugerir extensões disponíveis para o registro"
          },
          "hosts": {
            "type": "array",
            "description": "CDN's de um domínio publicado"
          },
          "publication-status": {
            "type": "string",
            "description": "Status de um dominio registrado"
          },
          "expires-at": {
            "type": "Date",
            "description": "Vencimento do domínio"
          },
          "reasons": {
            "type": "array",
            "description": "Justificativas da indisponibilidade de registro ainda não registrado"
          }
        },
        "example": {
          "status_code": 2,
          "status": "REGISTERED",
          "fqdn": "brasilapi.com.br",
          "hosts": [
            "bob.ns.cloudflare.com",
            "lily.ns.cloudflare.com"
          ],
          "publication-status": "published",
          "expires-at": "2022-09-23T00:00:00-03:00",
          "suggestions": [
            "agr.br",
            "app.br",
            "art.br",
            "blog.br",
            "dev.br",
            "eco.br",
            "esp.br",
            "etc.br",
            "far.br",
            "flog.br",
            "imb.br",
            "ind.br",
            "inf.br",
            "log.br",
            "net.br",
            "ong.br",
            "rec.br",
            "seg.br",
            "srv.br",
            "tec.br",
            "tmp.br",
            "tur.br",
            "tv.br",
            "vlog.br",
            "wiki.br"
          ]
        }
      },
      "REGISTROBR_BAD_REQUEST": {
        "title": "Erro ao avaliar o domínio",
        "type": "object",
        "required": [
          "message",
          "type",
          "name"
        ],
        "properties": {
          "message": {
            "type": "string",
            "description": "Mensagem de erro"
          },
          "type": {
            "type": "string",
            "description": "Tipo do erro"
          },
          "name": {
            "type": "string",
            "description": "Nome do erro"
          }
        },
        "example": {
          "message": "O domínio não foi informado corretamente!",
          "type": "bad_request",
          "name": "BadRequestError"
        }
      },
      "Taxa": {
        "title": "Taxa",
        "required": [
          "nome",
          "valor"
        ],
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "valor": {
            "type": "decimal",
            "format": "double"
          }
        },
        "example": {
          "nome": "CDI",
          "valor": 7.65
        }
      }
    }
  },
  "openapi": "3.0.5",
  "info": {
    "title": "Brasil API",
    "description": "Acesso programático de informações é algo fundamental na comunicação entre sistemas, mas, para nossa surpresa, uma informação tão útil e pública quanto um CEP não consegue ser acessada diretamente por um navegador por conta da API dos Correios não possuir CORS habilitado.\nDado a isso, este projeto experimental tem como objetivo centralizar e disponibilizar endpoints modernos com baixíssima latência utilizando tecnologias como Vercel Smart CDN responsável por fazer o cache das informações em atualmente 23 regiões distribuídas ao longo do mundo (incluindo Brasil). Então não importa o quão devagar for a fonte dos dados, nós queremos disponibilizá-la da forma mais rápida e moderna possível.\n\nRecursos disponíveis\n  - CEP\n  - DDD\n  - Bank\n  - CNPJ\n  - IBGE\n  - Feriados Nacionais\n  - Tabela FIPE\n  - ISBN\n  - Registros de domínio br\n  - Taxas",
    "termsOfService": "https://brasilapi.com.br/",
    "version": "1.0.0",
    "contact": {
      "url": "https://brasilapi.com.br"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/BrasilAPI/BrasilAPI/blob/master/LICENSE"
    }
  },
  "servers": [
    {
      "url": "https://brasilapi.com.br/api"
    }
  ]
}